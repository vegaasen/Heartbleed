package com.vegaasen.exploit.heartbleed.util;

import org.apache.commons.codec.DecoderException;
import org.apache.commons.codec.binary.Hex;

import java.io.UnsupportedEncodingException;

/**
 * @author <a href="mailto:vegaasen@gmail.com">Vegard Aasen</a>
 */
public final class RadixUtils {

    public static final String DEFAULT_ENCODING = "UTF-8";

    private static final char[] hexArray = "0123456789ABCDEF".toCharArray();

    private static String encoding;

    static {
        encoding = DEFAULT_ENCODING;
    }

    private RadixUtils() {
    }

    public static String bytesToHex(final byte[] candidate) {
        if (candidate == null || candidate.length == 0) {
            throw new IllegalArgumentException("The candidate cannot be nilled");
        }
        final char[] hexChars = new char[candidate.length * 2];
        for (int j = 0; j < candidate.length; j++) {
            int v = candidate[j] & 0xFF;
            hexChars[j * 2] = hexArray[v >>> 4];
            hexChars[j * 2 + 1] = hexArray[v & 0x0F];
        }
        try {
            return new String(Hex.decodeHex(hexChars), encoding);
        } catch (DecoderException | UnsupportedEncodingException e) {
            throw new IllegalStateException("Unable to convert.", e);
        }
    }

    public static String getEncoding() {
        return encoding;
    }

    public static void setEncoding(String enc) {
        encoding = enc;
    }
}
